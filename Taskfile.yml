version: '3'

################################################################################################
#
# ref:
#   - https://taskfile.dev/#/usage
#
################################################################################################


#
# sub namespace: https://taskfile.dev/#/usage?id=including-other-taskfiles
#
includes:
  os:
    taskfile: ./script/Taskfile_{{OS}}.yml
    dir: ./script

  base:
    taskfile: ./script/Taskfile_base.yml
    dir: .

  go:
    taskfile: ./script/Taskfile_base_go.yml
    dir: .

  local:
    taskfile: ./deploy/local
    dir: ./deploy/local

  #
  # 待测试的服务根目录: 不支持从 .env 读取
  #
  app:demo:
    taskfile: ./app/core/demo
    dir: ./app/core/demo

  app:queue:
    taskfile: ./app/core/queue
    dir: ./app/core/queue

################################################################################################

#
# global vars: https://taskfile.dev/#/usage?id=variables
#
vars:
  VAR1: "some-var"

#
# global env: https://taskfile.dev/#/usage?id=environment-variables
#
env:
  ENV1: testing-env

# env file:
dotenv:
  - .env

################################################################################################

#
# task groups: https://taskfile.dev/#/usage?id=task-directory
#
tasks:
  default:
    cmds:
      - task: init
      - task: run

  install:
    cmds:
      - task: os:install
      - task: go:install
      - task: go:install-go-zero
      - task: go:install-proto

  init:
    cmds:
      - task: os:init
      - task: go:init

  tidy:
    cmds:
      #      - go mod tidy -v
      - task: app:demo:tidy
      - task: app:queue:tidy

  update:
    cmds:
      - export GOPROXY=https://goproxy.cn; go get -u -v github.com/better-go/pkg@v0.1.17
      - echo $GOPROXY
  #      - export GOPROXY=https://goproxy.cn; go get -u -v github.com/tal-tech/go-zero@v1.2.0
  #      - export GOPROXY=https://goproxy.cn; go get -u -v github.com/tal-tech/go-zero@v1.1.10

  version:
    cmds:
      - task: os:version
      - task: go:version

  ################################################################################################

  infra:
    cmds:
      - task: local:init

  infra:stop:
    cmds:
      - task: local:clean

  ################################################################################################


  # 项目全局 + 批量生成:
  proto:gen:all:
    cmds:
      - |
        find ./app -iname "*.proto" -exec \
          protoc --proto_path=. \
            --proto_path=$(pwd)/pkg/x \
            --go_out=paths=source_relative:. \
            --go-http_out=paths=source_relative:. \
            --go-grpc_out=paths=source_relative:. \
            --validate_out=paths=source_relative,lang=go:. \
            --openapi_out==paths=source_relative:. \
            {} \;


  run:
    cmds:
      - task: app:demo:run  # set app first

  api:test:
    cmds:
      - task: app:demo:api:test

  ################################################################################################

  new-app-basic:
    cmds:
      - task: go:app-gen-basic

  new-app-biz:
    cmds:
      - task: go:app-gen-biz

  new-service-api:
    cmds:
      - goctl api new ./tmp/demo

  new-service-rpc:
    cmds:
      - goctl rpc new ./tmp/demo

  new-service-proto:
    cmds:
      - goctl rpc template -o ./tmp/demo.proto

  ################################################################################################


  push:
    cmds:
      - git push origin main --tags
      - repo_url=`git remote -v | grep push | awk -F ":" '{print $2}' | awk -F ".git" '{print "https://github.com/"$1}'`; open $repo_url


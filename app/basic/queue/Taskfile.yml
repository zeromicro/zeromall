version: '3'

################################################################################################
#
# ref:
#   - https://taskfile.dev/#/styleguide
#     - https://taskfile.dev/#/styleguide?id=use-the-correct-order-of-keywords
#     - https://taskfile.dev/#/styleguide?id=use-colon-for-task-namespacing
#   - yml format: https://juejin.cn/post/6844903972688363534
#
################################################################################################

env:
  serverType:
  configFile:

################################################################################################

tasks:
  default:
    cmds:
      - task: init
      - task: run

  init:
    cmds:
      - task: init:db

  #
  # init db:
  #	- https://segmentfault.com/a/1190000020211225
  #	dump:
  #		- docker exec -it mysql mysqldump -u用户名 -p密码 数据库 > /mnt/vdb/data/mysql/test_db.sql
  #
  init:db:
    cmds:
      - docker exec -i mysql mysql --default-character-set=utf8mb4 -uroot -proot dev < ./proto/model/schema.sql

  backup:db:
    cmds:
      - docker exec -it mysql mysqldump --no-data --default-character-set=utf8mb4 -R -E --hex-blob -uroot -proot dev > ./tmp/backup_schema.sql

  backup:db:data:
    cmds:
      - docker exec -it mysql mysqldump --default-character-set=utf8mb4 -R -E --hex-blob -uroot -proot dev > ./tmp/backup.sql


  ################################################################################################

  run:svc:
    cmds:
      - task: run:auto
        vars:
          {SERVER_TYPE: "inner", CONFIG_FILE: "configs/configs.yaml"}

  run:api:
    cmds:
      - task: run:auto
        vars:
          {SERVER_TYPE: "outer", CONFIG_FILE: "configs/configs.yaml"}

  run:job:
    cmds:
      - task: run:auto
        vars:
          {SERVER_TYPE: "job", CONFIG_FILE: "configs/configs.yaml"}

  run:admin:
    cmds:
      - task: run:auto
        vars:
          {SERVER_TYPE: "admin", CONFIG_FILE: "configs/configs.yaml"}

  run:auto:
    cmds:
      - export serverType={{.SERVER_TYPE}}; export configFile={{.CONFIG_FILE}}; air -d    # 自动watch 代码变更, 热加载:

  run:debug:
    cmds:
      - go run cmd/main.go -f configs/configs.yaml

  build:
    cmds:
      - go build -o ./tmp/main ./cmd

  ################################################################################################

  test:pub:msg:
    cmds:
      - |
        curl --request POST \
        --url http://localhost:8000/queue/publish/ \
        --header 'content-type: application/json' \
        --data '{"queue_name": "test-queue", "type": "type1", "data": "test messagexxxx6", "raw_data":  1, "timestamp": 2}'

  # API 测试:
  test:api:
    cmds:
      - curl -i http://localhost:8000/hello/tom
      - curl -i http://localhost:8000/hello/jim

  test:api:graphql:
    cmds:
      - curl -i http://localhost:8000/graphql/do


  #
  # under mac osx: kill 进程:
  #
  kill:
    cmds:
      - lsof -ti :6000 | xargs kill # rpc server
      - lsof -ti :8000 | xargs kill # api server
      - lsof -ti :8001 | xargs kill # admin api
      - lsof -ti :8002 | xargs kill # job server

  clean:
    cmds:
      - task: kill


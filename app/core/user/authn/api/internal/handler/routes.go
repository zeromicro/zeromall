// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"user/authn/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register/check",
				Handler: RegisterCheckHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quick/code/sms",
				Handler: QuickBySmsCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quick/code/email",
				Handler: QuickByEmailCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/send/code/email",
				Handler: SendEmailCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/send/code/sms",
				Handler: SendSmsCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register/sms",
				Handler: RegisterBySmsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register/email",
				Handler: RegisterByEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register/oauth",
				Handler: RegisterByOauthHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/email",
				Handler: LoginByEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/email/code",
				Handler: LoginByEmailCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/mobile",
				Handler: LoginByMobileHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/mobile/code",
				Handler: LoginByMobileCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/oauth",
				Handler: LoginOauthHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login/2fa",
				Handler: Login2FaHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/security/anti/robot",
				Handler: AntiRobotHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/security/mfa/2fa",
				Handler: Mfa2faCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/security/mfa/2fa/verify",
				Handler: Mfa2faVerifyHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/logout",
				Handler: LogoutHandler(serverCtx),
			},
		},
		rest.WithPrefix("/eshop/v1/user/authn"),
	)
}

// Code generated by goctl. DO NOT EDIT.
// Source: main.proto

package server

import (
	"context"

	"notification/sms/rpc/internal/logic"
	"notification/sms/rpc/internal/svc"
	"notification/sms/rpc/pb"
)

type ServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedServiceServer
}

func NewServiceServer(svcCtx *svc.ServiceContext) *ServiceServer {
	return &ServiceServer{
		svcCtx: svcCtx,
	}
}

// Send 发送短信:
func (s *ServiceServer) Send(ctx context.Context, in *pb.SendReq) (*pb.SendResp, error) {
	l := logic.NewSendLogic(ctx, s.svcCtx)
	return l.Send(in)
}

// SendTemplate 模板发送:
func (s *ServiceServer) SendTemplate(ctx context.Context, in *pb.SendTemplateReq) (*pb.SendTemplateResp, error) {
	l := logic.NewSendTemplateLogic(ctx, s.svcCtx)
	return l.SendTemplate(in)
}

// GetTemplate 查询模板
func (s *ServiceServer) GetTemplate(ctx context.Context, in *pb.GetTemplateReq) (*pb.GetTemplateResp, error) {
	l := logic.NewGetTemplateLogic(ctx, s.svcCtx)
	return l.GetTemplate(in)
}

// SendBatch 批量发送:
func (s *ServiceServer) SendBatch(ctx context.Context, in *pb.SendBatchReq) (*pb.SendBatchResp, error) {
	l := logic.NewSendBatchLogic(ctx, s.svcCtx)
	return l.SendBatch(in)
}

// CheckMobileStatus 检查手机号码状态:
func (s *ServiceServer) CheckMobileStatus(ctx context.Context, in *pb.CheckMobileStatusReq) (*pb.CheckMobileStatusResp, error) {
	l := logic.NewCheckMobileStatusLogic(ctx, s.svcCtx)
	return l.CheckMobileStatus(in)
}
